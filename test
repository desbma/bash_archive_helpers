#!/bin/bash -eu

set -o pipefail

set +u
if [ "$CI" -a "$TRAVIS" ]
then
  # be very verbose to help investigate tests that only fail on Travis
  set -x
fi
set -u

# auto cleanup
at_exit() {
  set +u
  rm -Rf "$TMP_DIR"
  set -u
}
trap at_exit EXIT

readonly TMP_DIR=$(mktemp -d /tmp/$(basename -- $0).XXXXXXXXXX)
readonly TMP_INPUT_DIR=$TMP_DIR/input
readonly TMP_OUTPUT_DIR=$TMP_DIR/output

mkdir $TMP_INPUT_DIR $TMP_OUTPUT_DIR

cd "$(dirname -- $0)"

if [ ! -f assert.sh ]
then
  wget https://raw.githubusercontent.com/lehmannro/assert.sh/9424e1aa10ac8897e3cea56912a8f4bf5a1b7ce1/assert.sh
fi

. assert.sh
. archive_helpers

# report versions
echo "Bash: $BASH_VERSION"
echo "tar: $(tar --version 2>&1 | head -n 1)"
echo "pv: $(pv -V 2>&1 | head -n 1 | cut -d ' ' -f 2)"
echo "gzip: $(gzip -V 2>&1 | head -n 1 | cut -d ' ' -f 2-)"
echo "bzip2: $(bzip2 -V 2>&1 | head -n 1 | sed 's/^.*Version \(.*\)$/\1/')"
echo "xz: $(xz -V 2>&1 | cut -d ' ' -f 4)"

# create dummy data
dd status=noxfer if=/dev/urandom of=$TMP_INPUT_DIR/random1 bs=4K count=8 2> /dev/null
dd status=noxfer if=/dev/urandom of=$TMP_INPUT_DIR/random2 bs=4K count=8 2> /dev/null
pushd $TMP_INPUT_DIR > /dev/null
tar -cf random1.tar random1
tar -czf random1.tar.gz random1
tar -cjf random1.tar.bz2 random1
tar -cJf random1.tar.xz random1
tar -cf random.tar random{1,2}
tar -czf random.tar.gz random{1,2}
tar -cjf random.tar.bz2 random{1,2}
tar -cJf random.tar.xz random{1,2}
popd > /dev/null

# UnTar (raw tar)
pushd $TMP_OUTPUT_DIR > /dev/null
#assert_raises "UnTar $TMP_INPUT_DIR/random1.tar" 0
UnTar $TMP_INPUT_DIR/random1.tar &> /dev/null
popd > /dev/null
assert "diff $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1" ""
rm -Rf $TMP_OUTPUT_DIR/*
pushd $TMP_OUTPUT_DIR > /dev/null
#assert_raises "UnTar $TMP_INPUT_DIR/random.tar" 0
UnTar $TMP_INPUT_DIR/random.tar &> /dev/null
popd > /dev/null
assert "diff $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1" ""
assert "diff $TMP_INPUT_DIR/random2 $TMP_OUTPUT_DIR/random2" ""
rm -Rf $TMP_OUTPUT_DIR/*

# UnTar (gzip)
pushd $TMP_OUTPUT_DIR > /dev/null
#assert_raises "UnTar $TMP_INPUT_DIR/random1.tar.gz" 0
UnTar $TMP_INPUT_DIR/random1.tar.gz &> /dev/null
popd > /dev/null
assert "diff $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1" ""
rm -Rf $TMP_OUTPUT_DIR/*
pushd $TMP_OUTPUT_DIR > /dev/null
#assert_raises "UnTar $TMP_INPUT_DIR/random.tar.gz" 0
UnTar $TMP_INPUT_DIR/random.tar.gz &> /dev/null
popd > /dev/null
assert "diff $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1" ""
assert "diff $TMP_INPUT_DIR/random2 $TMP_OUTPUT_DIR/random2" ""
rm -Rf $TMP_OUTPUT_DIR/*

# UnTar (bzip2)
pushd $TMP_OUTPUT_DIR > /dev/null
#assert_raises "UnTar $TMP_INPUT_DIR/random1.tar.bz2" 0
UnTar $TMP_INPUT_DIR/random1.tar.bz2 &> /dev/null
popd > /dev/null
assert "diff $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1" ""
rm -Rf $TMP_OUTPUT_DIR/*
pushd $TMP_OUTPUT_DIR > /dev/null
#assert_raises "UnTar $TMP_INPUT_DIR/random.tar.bz2" 0
UnTar $TMP_INPUT_DIR/random.tar.bz2 &> /dev/null
popd > /dev/null
assert "diff $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1" ""
assert "diff $TMP_INPUT_DIR/random2 $TMP_OUTPUT_DIR/random2" ""
rm -Rf $TMP_OUTPUT_DIR/*

# UnTar (xz)
pushd $TMP_OUTPUT_DIR > /dev/null
#assert_raises "UnTar $TMP_INPUT_DIR/random1.tar.xz" 0
UnTar $TMP_INPUT_DIR/random1.tar.xz &> /dev/null
popd > /dev/null
assert "diff $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1" ""
rm -Rf $TMP_OUTPUT_DIR/*
pushd $TMP_OUTPUT_DIR > /dev/null
#assert_raises "UnTar $TMP_INPUT_DIR/random.tar.xz" 0
UnTar $TMP_INPUT_DIR/random.tar.xz &> /dev/null
popd > /dev/null
assert "diff $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1" ""
assert "diff $TMP_INPUT_DIR/random2 $TMP_OUTPUT_DIR/random2" ""
rm -Rf $TMP_OUTPUT_DIR/*

assert_end "archive_helpers (UnTar)"

# Tar
assert_raises "Tar $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.tar" 0
assert_raises "tar -tf $TMP_OUTPUT_DIR/random1.tar" 0
assert "tar -tf $TMP_OUTPUT_DIR/random1.tar" "$TMP_INPUT_DIR/random1"
rm -Rf $TMP_OUTPUT_DIR/*
assert_end "archive_helpers (Tar)"

# TarNpb
assert_raises "TarNpb $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.tar" 0
assert_raises "tar -tf $TMP_OUTPUT_DIR/random1.tar" 0
assert "tar -tf $TMP_OUTPUT_DIR/random1.tar" "$TMP_INPUT_DIR/random1"
rm -Rf $TMP_OUTPUT_DIR/*
assert_end "archive_helpers (TarNpb)"

# TarExclude
assert_raises "TarExclude $TMP_INPUT_DIR $TMP_OUTPUT_DIR/random.tar random.tar* random1.tar*" 0
assert_raises "tar -tf $TMP_OUTPUT_DIR/random.tar" 0
assert "tar -tf $TMP_OUTPUT_DIR/random.tar" "$TMP_INPUT_DIR/\n$TMP_INPUT_DIR/random2\n$TMP_INPUT_DIR/random1"
rm -Rf $TMP_OUTPUT_DIR/*
assert_end "archive_helpers (TarExclude)"

# Gz
assert_raises "Gz $TMP_INPUT_DIR $TMP_OUTPUT_DIR/out.gz" 1 ""
assert_raises "test -f $TMP_OUTPUT_DIR/out.gz" 1 ""
assert_raises "Gz $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.gz" 0 ""
assert_raises "gzip -cd $TMP_OUTPUT_DIR/random1.gz > $TMP_OUTPUT_DIR/random1; cmp $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1" 0 ""
rm -Rf $TMP_OUTPUT_DIR/*
assert_raises "Gz $TMP_INPUT_DIR/random1 > $TMP_OUTPUT_DIR/random1.gz" 0 ""
assert_raises "gzip -cd $TMP_OUTPUT_DIR/random1.gz > $TMP_OUTPUT_DIR/random1; cmp $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1" 0 ""
rm -Rf $TMP_OUTPUT_DIR/*
assert "Gz $TMP_INPUT_DIR/random1 > /dev/null" ""
assert "Gz $TMP_INPUT_DIR/random1 /dev/null" ""
assert_end "archive_helpers (Gz)"

# TarGz
#assert_raises "TarGz $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.tar.gz" 0
TarGz $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.tar.gz &> /dev/null
assert_raises "tar -tzf $TMP_OUTPUT_DIR/random1.tar.gz" 0
assert "tar -tzf $TMP_OUTPUT_DIR/random1.tar.gz" "$TMP_INPUT_DIR/random1"
rm -Rf $TMP_OUTPUT_DIR/*
assert_end "archive_helpers (TarGz)"

# TarGzNpb
#assert_raises "TarGzNpb $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.tar.gz" 0
TarGzNpb $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.tar.gz &> /dev/null
assert_raises "tar -tzf $TMP_OUTPUT_DIR/random1.tar.gz" 0
assert "tar -tzf $TMP_OUTPUT_DIR/random1.tar.gz" "$TMP_INPUT_DIR/random1"
rm -Rf $TMP_OUTPUT_DIR/*
assert_end "archive_helpers (TarGzNpb)"

# TarGzExclude
#assert_raises "TarGzExclude $TMP_INPUT_DIR $TMP_OUTPUT_DIR/random.tar.gz random.tar* random1.tar*" 0
TarGzExclude $TMP_INPUT_DIR $TMP_OUTPUT_DIR/random.tar.gz random.tar* random1.tar* &> /dev/null
assert_raises "tar -tzf $TMP_OUTPUT_DIR/random.tar.gz" 0
assert "tar -tzf $TMP_OUTPUT_DIR/random.tar.gz" "$TMP_INPUT_DIR/\n$TMP_INPUT_DIR/random2\n$TMP_INPUT_DIR/random1"
rm -Rf $TMP_OUTPUT_DIR/*
assert_end "archive_helpers (TarGzExclude)"

# Bz2
assert_raises "Bz2 $TMP_INPUT_DIR $TMP_OUTPUT_DIR/out.bz2" 1 ""
assert_raises "test -f $TMP_OUTPUT_DIR/out.bz2" 1 ""
assert_raises "Bz2 $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.bz2" 0 ""
assert_raises "bzip2 -cd $TMP_OUTPUT_DIR/random1.bz2 > $TMP_OUTPUT_DIR/random1; cmp $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1" 0 ""
rm -Rf $TMP_OUTPUT_DIR/*
assert_raises "Bz2 $TMP_INPUT_DIR/random1 > $TMP_OUTPUT_DIR/random1.bz2" 0 ""
assert_raises "bzip2 -cd $TMP_OUTPUT_DIR/random1.bz2 > $TMP_OUTPUT_DIR/random1; cmp $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1" 0 ""
rm -Rf $TMP_OUTPUT_DIR/*
assert "Bz2 $TMP_INPUT_DIR/random1 > /dev/null" ""
assert "Bz2 $TMP_INPUT_DIR/random1 /dev/null" ""
assert_end "archive_helpers (Bz2)"

# TarBz2
#assert_raises "TarBz2 $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.tar.bz2" 0
TarBz2 $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.tar.bz2 &> /dev/null
assert_raises "tar -tjf $TMP_OUTPUT_DIR/random1.tar.bz2" 0
assert "tar -tjf $TMP_OUTPUT_DIR/random1.tar.bz2" "$TMP_INPUT_DIR/random1"
rm -Rf $TMP_OUTPUT_DIR/*
assert_end "archive_helpers (TarBz2)"

# TarBz2Npb
#assert_raises "TarBz2Npb $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.tar.bz2" 0
TarBz2Npb $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.tar.bz2 &> /dev/null
assert_raises "tar -tjf $TMP_OUTPUT_DIR/random1.tar.bz2" 0
assert "tar -tjf $TMP_OUTPUT_DIR/random1.tar.bz2" "$TMP_INPUT_DIR/random1"
rm -Rf $TMP_OUTPUT_DIR/*
assert_end "archive_helpers (TarBz2Npb)"

# TarBz2Exclude
#assert_raises "TarBz2Exclude $TMP_INPUT_DIR $TMP_OUTPUT_DIR/random.tar.bz2 random.tar* random1.tar*" 0
TarBz2Exclude $TMP_INPUT_DIR $TMP_OUTPUT_DIR/random.tar.bz2 random.tar* random1.tar* &> /dev/null
assert_raises "tar -tjf $TMP_OUTPUT_DIR/random.tar.bz2" 0
assert "tar -tjf $TMP_OUTPUT_DIR/random.tar.bz2" "$TMP_INPUT_DIR/\n$TMP_INPUT_DIR/random2\n$TMP_INPUT_DIR/random1"
rm -Rf $TMP_OUTPUT_DIR/*
assert_end "archive_helpers (TarBz2Exclude)"

# Xz
assert_raises "Xz $TMP_INPUT_DIR $TMP_OUTPUT_DIR/out.xz" 1 ""
assert_raises "test -f $TMP_OUTPUT_DIR/out.xz" 1 ""
assert_raises "Xz $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.xz" 0 ""
assert_raises "xz -cd $TMP_OUTPUT_DIR/random1.xz > $TMP_OUTPUT_DIR/random1; cmp $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1" 0 ""
rm -Rf $TMP_OUTPUT_DIR/*
assert_raises "Xz $TMP_INPUT_DIR/random1 > $TMP_OUTPUT_DIR/random1.xz" 0 ""
assert_raises "xz -cd $TMP_OUTPUT_DIR/random1.xz > $TMP_OUTPUT_DIR/random1; cmp $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1" 0 ""
rm -Rf $TMP_OUTPUT_DIR/*
assert "Xz $TMP_INPUT_DIR/random1 > /dev/null" ""
assert "Xz $TMP_INPUT_DIR/random1 /dev/null" ""
assert_end "archive_helpers (Xz)"

# TarXz
#assert_raises "TarXz $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.tar.xz" 0
TarXz $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.tar.xz &> /dev/null
assert_raises "tar -tJf $TMP_OUTPUT_DIR/random1.tar.xz" 0
assert "tar -tJf $TMP_OUTPUT_DIR/random1.tar.xz" "$TMP_INPUT_DIR/random1"
rm -Rf $TMP_OUTPUT_DIR/*
assert_end "archive_helpers (TarXz)"

# TarXzNpb
#assert_raises "TarXzNpb $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.tar.xz" 0
TarXzNpb $TMP_INPUT_DIR/random1 $TMP_OUTPUT_DIR/random1.tar.xz &> /dev/null
assert_raises "tar -tJf $TMP_OUTPUT_DIR/random1.tar.xz" 0
assert "tar -tJf $TMP_OUTPUT_DIR/random1.tar.xz" "$TMP_INPUT_DIR/random1"
rm -Rf $TMP_OUTPUT_DIR/*
assert_end "archive_helpers (TarXzNpb)"

# TarXzExclude
#assert_raises "TarXzExclude $TMP_INPUT_DIR $TMP_OUTPUT_DIR/random.tar.xz random.tar* random1.tar*" 0
TarXzExclude $TMP_INPUT_DIR $TMP_OUTPUT_DIR/random.tar.xz random.tar* random1.tar* &> /dev/null
assert_raises "tar -tJf $TMP_OUTPUT_DIR/random.tar.xz" 0
assert "tar -tJf $TMP_OUTPUT_DIR/random.tar.xz" "$TMP_INPUT_DIR/\n$TMP_INPUT_DIR/random2\n$TMP_INPUT_DIR/random1"
rm -Rf $TMP_OUTPUT_DIR/*
assert_end "archive_helpers (TarXzExclude)"
